#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.269
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TagThis.Models
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="TagThis")]
	public partial class TagThisDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertCommentRating(CommentRating instance);
    partial void UpdateCommentRating(CommentRating instance);
    partial void DeleteCommentRating(CommentRating instance);
    partial void Inserttagmap(tagmap instance);
    partial void Updatetagmap(tagmap instance);
    partial void Deletetagmap(tagmap instance);
    partial void InsertPasswordReset(PasswordReset instance);
    partial void UpdatePasswordReset(PasswordReset instance);
    partial void DeletePasswordReset(PasswordReset instance);
    partial void Inserttag(tag instance);
    partial void Updatetag(tag instance);
    partial void Deletetag(tag instance);
    partial void InsertSubscription(Subscription instance);
    partial void UpdateSubscription(Subscription instance);
    partial void DeleteSubscription(Subscription instance);
    partial void InsertInvitation(Invitation instance);
    partial void UpdateInvitation(Invitation instance);
    partial void DeleteInvitation(Invitation instance);
    partial void InsertWebPage(WebPage instance);
    partial void UpdateWebPage(WebPage instance);
    partial void DeleteWebPage(WebPage instance);
    partial void Insertinterestmap(interestmap instance);
    partial void Updateinterestmap(interestmap instance);
    partial void Deleteinterestmap(interestmap instance);
    partial void InsertPost(Post instance);
    partial void UpdatePost(Post instance);
    partial void DeletePost(Post instance);
    partial void Insertnotification(notification instance);
    partial void Updatenotification(notification instance);
    partial void Deletenotification(notification instance);
    partial void InsertPostUserTag(PostUserTag instance);
    partial void UpdatePostUserTag(PostUserTag instance);
    partial void DeletePostUserTag(PostUserTag instance);
    partial void InsertComment(Comment instance);
    partial void UpdateComment(Comment instance);
    partial void DeleteComment(Comment instance);
    partial void InsertUserPageRelation(UserPageRelation instance);
    partial void UpdateUserPageRelation(UserPageRelation instance);
    partial void DeleteUserPageRelation(UserPageRelation instance);
    partial void InsertUserData(UserData instance);
    partial void UpdateUserData(UserData instance);
    partial void DeleteUserData(UserData instance);
    #endregion
		
		public TagThisDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["TagThisConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public TagThisDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public TagThisDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public TagThisDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public TagThisDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<CommentRating> CommentRatings
		{
			get
			{
				return this.GetTable<CommentRating>();
			}
		}
		
		public System.Data.Linq.Table<tagmap> tagmaps
		{
			get
			{
				return this.GetTable<tagmap>();
			}
		}
		
		public System.Data.Linq.Table<PasswordReset> PasswordResets
		{
			get
			{
				return this.GetTable<PasswordReset>();
			}
		}
		
		public System.Data.Linq.Table<tag> tags
		{
			get
			{
				return this.GetTable<tag>();
			}
		}
		
		public System.Data.Linq.Table<Subscription> Subscriptions
		{
			get
			{
				return this.GetTable<Subscription>();
			}
		}
		
		public System.Data.Linq.Table<Invitation> Invitations
		{
			get
			{
				return this.GetTable<Invitation>();
			}
		}
		
		public System.Data.Linq.Table<WebPage> WebPages
		{
			get
			{
				return this.GetTable<WebPage>();
			}
		}
		
		public System.Data.Linq.Table<interestmap> interestmaps
		{
			get
			{
				return this.GetTable<interestmap>();
			}
		}
		
		public System.Data.Linq.Table<Post> Posts
		{
			get
			{
				return this.GetTable<Post>();
			}
		}
		
		public System.Data.Linq.Table<notification> notifications
		{
			get
			{
				return this.GetTable<notification>();
			}
		}
		
		public System.Data.Linq.Table<PostUserTag> PostUserTags
		{
			get
			{
				return this.GetTable<PostUserTag>();
			}
		}
		
		public System.Data.Linq.Table<Comment> Comments
		{
			get
			{
				return this.GetTable<Comment>();
			}
		}
		
		public System.Data.Linq.Table<UserPageRelation> UserPageRelations
		{
			get
			{
				return this.GetTable<UserPageRelation>();
			}
		}
		
		public System.Data.Linq.Table<UserData> UserDatas
		{
			get
			{
				return this.GetTable<UserData>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CommentRating")]
	public partial class CommentRating : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _comment_id;
		
		private int _id;
		
		private int _rating;
		
		private System.Guid _userid;
		
		private EntityRef<Comment> _Comment;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Oncomment_idChanging(int value);
    partial void Oncomment_idChanged();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnratingChanging(int value);
    partial void OnratingChanged();
    partial void OnuseridChanging(System.Guid value);
    partial void OnuseridChanged();
    #endregion
		
		public CommentRating()
		{
			this._Comment = default(EntityRef<Comment>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_comment_id", DbType="Int NOT NULL")]
		public int comment_id
		{
			get
			{
				return this._comment_id;
			}
			set
			{
				if ((this._comment_id != value))
				{
					if (this._Comment.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Oncomment_idChanging(value);
					this.SendPropertyChanging();
					this._comment_id = value;
					this.SendPropertyChanged("comment_id");
					this.Oncomment_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_rating", DbType="Int NOT NULL")]
		public int rating
		{
			get
			{
				return this._rating;
			}
			set
			{
				if ((this._rating != value))
				{
					this.OnratingChanging(value);
					this.SendPropertyChanging();
					this._rating = value;
					this.SendPropertyChanged("rating");
					this.OnratingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_userid", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid userid
		{
			get
			{
				return this._userid;
			}
			set
			{
				if ((this._userid != value))
				{
					this.OnuseridChanging(value);
					this.SendPropertyChanging();
					this._userid = value;
					this.SendPropertyChanged("userid");
					this.OnuseridChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Comment_CommentRating", Storage="_Comment", ThisKey="comment_id", OtherKey="id", IsForeignKey=true)]
		public Comment Comment
		{
			get
			{
				return this._Comment.Entity;
			}
			set
			{
				Comment previousValue = this._Comment.Entity;
				if (((previousValue != value) 
							|| (this._Comment.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Comment.Entity = null;
						previousValue.CommentRatings.Remove(this);
					}
					this._Comment.Entity = value;
					if ((value != null))
					{
						value.CommentRatings.Add(this);
						this._comment_id = value.id;
					}
					else
					{
						this._comment_id = default(int);
					}
					this.SendPropertyChanged("Comment");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tagmap")]
	public partial class tagmap : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _page_id;
		
		private int _tag_id;
		
		private int _tagmap_id;
		
		private System.Nullable<System.Guid> _user_id;
		
		private System.DateTime _date;
		
		private EntityRef<WebPage> _WebPage;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onpage_idChanging(int value);
    partial void Onpage_idChanged();
    partial void Ontag_idChanging(int value);
    partial void Ontag_idChanged();
    partial void Ontagmap_idChanging(int value);
    partial void Ontagmap_idChanged();
    partial void Onuser_idChanging(System.Nullable<System.Guid> value);
    partial void Onuser_idChanged();
    partial void OndateChanging(System.DateTime value);
    partial void OndateChanged();
    #endregion
		
		public tagmap()
		{
			this._WebPage = default(EntityRef<WebPage>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_page_id", DbType="Int NOT NULL")]
		public int page_id
		{
			get
			{
				return this._page_id;
			}
			set
			{
				if ((this._page_id != value))
				{
					if (this._WebPage.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onpage_idChanging(value);
					this.SendPropertyChanging();
					this._page_id = value;
					this.SendPropertyChanged("page_id");
					this.Onpage_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tag_id", DbType="Int NOT NULL")]
		public int tag_id
		{
			get
			{
				return this._tag_id;
			}
			set
			{
				if ((this._tag_id != value))
				{
					this.Ontag_idChanging(value);
					this.SendPropertyChanging();
					this._tag_id = value;
					this.SendPropertyChanged("tag_id");
					this.Ontag_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tagmap_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int tagmap_id
		{
			get
			{
				return this._tagmap_id;
			}
			set
			{
				if ((this._tagmap_id != value))
				{
					this.Ontagmap_idChanging(value);
					this.SendPropertyChanging();
					this._tagmap_id = value;
					this.SendPropertyChanged("tagmap_id");
					this.Ontagmap_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_user_id", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> user_id
		{
			get
			{
				return this._user_id;
			}
			set
			{
				if ((this._user_id != value))
				{
					this.Onuser_idChanging(value);
					this.SendPropertyChanging();
					this._user_id = value;
					this.SendPropertyChanged("user_id");
					this.Onuser_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date", DbType="DateTime NOT NULL")]
		public System.DateTime date
		{
			get
			{
				return this._date;
			}
			set
			{
				if ((this._date != value))
				{
					this.OndateChanging(value);
					this.SendPropertyChanging();
					this._date = value;
					this.SendPropertyChanged("date");
					this.OndateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="WebPage_tagmap", Storage="_WebPage", ThisKey="page_id", OtherKey="page_id", IsForeignKey=true)]
		public WebPage WebPage
		{
			get
			{
				return this._WebPage.Entity;
			}
			set
			{
				WebPage previousValue = this._WebPage.Entity;
				if (((previousValue != value) 
							|| (this._WebPage.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._WebPage.Entity = null;
						previousValue.tagmaps.Remove(this);
					}
					this._WebPage.Entity = value;
					if ((value != null))
					{
						value.tagmaps.Add(this);
						this._page_id = value.page_id;
					}
					else
					{
						this._page_id = default(int);
					}
					this.SendPropertyChanged("WebPage");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PasswordReset")]
	public partial class PasswordReset : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _UserId;
		
		private System.Guid _ID;
		
		private System.DateTime _DateTime;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserIdChanging(System.Guid value);
    partial void OnUserIdChanged();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnDateTimeChanging(System.DateTime value);
    partial void OnDateTimeChanged();
    #endregion
		
		public PasswordReset()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateTime", DbType="DateTime NOT NULL")]
		public System.DateTime DateTime
		{
			get
			{
				return this._DateTime;
			}
			set
			{
				if ((this._DateTime != value))
				{
					this.OnDateTimeChanging(value);
					this.SendPropertyChanging();
					this._DateTime = value;
					this.SendPropertyChanged("DateTime");
					this.OnDateTimeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tags")]
	public partial class tag : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _tag_id;
		
		private string _name;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Ontag_idChanging(int value);
    partial void Ontag_idChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    #endregion
		
		public tag()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tag_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int tag_id
		{
			get
			{
				return this._tag_id;
			}
			set
			{
				if ((this._tag_id != value))
				{
					this.Ontag_idChanging(value);
					this.SendPropertyChanging();
					this._tag_id = value;
					this.SendPropertyChanged("tag_id");
					this.Ontag_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(64) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Subscriptions")]
	public partial class Subscription : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Subscriber;
		
		private System.Guid _Subscribedto;
		
		private bool _favs;
		
		private bool _loves;
		
		private System.DateTime _date;
		
		private int _id;
		
		private string _SubscribedtoName;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSubscriberChanging(System.Guid value);
    partial void OnSubscriberChanged();
    partial void OnSubscribedtoChanging(System.Guid value);
    partial void OnSubscribedtoChanged();
    partial void OnfavsChanging(bool value);
    partial void OnfavsChanged();
    partial void OnlovesChanging(bool value);
    partial void OnlovesChanged();
    partial void OndateChanging(System.DateTime value);
    partial void OndateChanged();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnSubscribedtoNameChanging(string value);
    partial void OnSubscribedtoNameChanged();
    #endregion
		
		public Subscription()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Subscriber", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid Subscriber
		{
			get
			{
				return this._Subscriber;
			}
			set
			{
				if ((this._Subscriber != value))
				{
					this.OnSubscriberChanging(value);
					this.SendPropertyChanging();
					this._Subscriber = value;
					this.SendPropertyChanged("Subscriber");
					this.OnSubscriberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Subscribedto", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid Subscribedto
		{
			get
			{
				return this._Subscribedto;
			}
			set
			{
				if ((this._Subscribedto != value))
				{
					this.OnSubscribedtoChanging(value);
					this.SendPropertyChanging();
					this._Subscribedto = value;
					this.SendPropertyChanged("Subscribedto");
					this.OnSubscribedtoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_favs", DbType="Bit NOT NULL")]
		public bool favs
		{
			get
			{
				return this._favs;
			}
			set
			{
				if ((this._favs != value))
				{
					this.OnfavsChanging(value);
					this.SendPropertyChanging();
					this._favs = value;
					this.SendPropertyChanged("favs");
					this.OnfavsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_loves", DbType="Bit NOT NULL")]
		public bool loves
		{
			get
			{
				return this._loves;
			}
			set
			{
				if ((this._loves != value))
				{
					this.OnlovesChanging(value);
					this.SendPropertyChanging();
					this._loves = value;
					this.SendPropertyChanged("loves");
					this.OnlovesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date", DbType="DateTime NOT NULL")]
		public System.DateTime date
		{
			get
			{
				return this._date;
			}
			set
			{
				if ((this._date != value))
				{
					this.OndateChanging(value);
					this.SendPropertyChanging();
					this._date = value;
					this.SendPropertyChanged("date");
					this.OndateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubscribedtoName", DbType="NChar(256) NOT NULL", CanBeNull=false)]
		public string SubscribedtoName
		{
			get
			{
				return this._SubscribedtoName;
			}
			set
			{
				if ((this._SubscribedtoName != value))
				{
					this.OnSubscribedtoNameChanging(value);
					this.SendPropertyChanging();
					this._SubscribedtoName = value;
					this.SendPropertyChanged("SubscribedtoName");
					this.OnSubscribedtoNameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Invitations")]
	public partial class Invitation : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _email;
		
		private System.Nullable<System.DateTime> _date;
		
		private bool _Checked;
		
		private System.Guid _ID;
		
		private System.Nullable<System.Guid> _invitedBy;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnemailChanging(string value);
    partial void OnemailChanged();
    partial void OndateChanging(System.Nullable<System.DateTime> value);
    partial void OndateChanged();
    partial void OnCheckedChanging(bool value);
    partial void OnCheckedChanged();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OninvitedByChanging(System.Nullable<System.Guid> value);
    partial void OninvitedByChanged();
    #endregion
		
		public Invitation()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string email
		{
			get
			{
				return this._email;
			}
			set
			{
				if ((this._email != value))
				{
					this.OnemailChanging(value);
					this.SendPropertyChanging();
					this._email = value;
					this.SendPropertyChanged("email");
					this.OnemailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date", DbType="DateTime")]
		public System.Nullable<System.DateTime> date
		{
			get
			{
				return this._date;
			}
			set
			{
				if ((this._date != value))
				{
					this.OndateChanging(value);
					this.SendPropertyChanging();
					this._date = value;
					this.SendPropertyChanged("date");
					this.OndateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Checked", DbType="Bit NOT NULL")]
		public bool Checked
		{
			get
			{
				return this._Checked;
			}
			set
			{
				if ((this._Checked != value))
				{
					this.OnCheckedChanging(value);
					this.SendPropertyChanging();
					this._Checked = value;
					this.SendPropertyChanged("Checked");
					this.OnCheckedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_invitedBy", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> invitedBy
		{
			get
			{
				return this._invitedBy;
			}
			set
			{
				if ((this._invitedBy != value))
				{
					this.OninvitedByChanging(value);
					this.SendPropertyChanging();
					this._invitedBy = value;
					this.SendPropertyChanged("invitedBy");
					this.OninvitedByChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.WebPage")]
	public partial class WebPage : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _page_id;
		
		private string _name;
		
		private string _url;
		
		private string _description;
		
		private string _AddedBy;
		
		private System.DateTime _date;
		
		private string _html;
		
		private string _thumburl;
		
		private string _type;
		
		private int _views;
		
		private int _clicks;
		
		private EntitySet<tagmap> _tagmaps;
		
		private EntitySet<Post> _Posts;
		
		private EntitySet<Comment> _Comments;
		
		private EntitySet<UserPageRelation> _UserPageRelations;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onpage_idChanging(int value);
    partial void Onpage_idChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnurlChanging(string value);
    partial void OnurlChanged();
    partial void OndescriptionChanging(string value);
    partial void OndescriptionChanged();
    partial void OnAddedByChanging(string value);
    partial void OnAddedByChanged();
    partial void OndateChanging(System.DateTime value);
    partial void OndateChanged();
    partial void OnhtmlChanging(string value);
    partial void OnhtmlChanged();
    partial void OnthumburlChanging(string value);
    partial void OnthumburlChanged();
    partial void OntypeChanging(string value);
    partial void OntypeChanged();
    partial void OnviewsChanging(int value);
    partial void OnviewsChanged();
    partial void OnclicksChanging(int value);
    partial void OnclicksChanged();
    #endregion
		
		public WebPage()
		{
			this._tagmaps = new EntitySet<tagmap>(new Action<tagmap>(this.attach_tagmaps), new Action<tagmap>(this.detach_tagmaps));
			this._Posts = new EntitySet<Post>(new Action<Post>(this.attach_Posts), new Action<Post>(this.detach_Posts));
			this._Comments = new EntitySet<Comment>(new Action<Comment>(this.attach_Comments), new Action<Comment>(this.detach_Comments));
			this._UserPageRelations = new EntitySet<UserPageRelation>(new Action<UserPageRelation>(this.attach_UserPageRelations), new Action<UserPageRelation>(this.detach_UserPageRelations));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_page_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int page_id
		{
			get
			{
				return this._page_id;
			}
			set
			{
				if ((this._page_id != value))
				{
					this.Onpage_idChanging(value);
					this.SendPropertyChanging();
					this._page_id = value;
					this.SendPropertyChanged("page_id");
					this.Onpage_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_url", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string url
		{
			get
			{
				return this._url;
			}
			set
			{
				if ((this._url != value))
				{
					this.OnurlChanging(value);
					this.SendPropertyChanging();
					this._url = value;
					this.SendPropertyChanged("url");
					this.OnurlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_description", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string description
		{
			get
			{
				return this._description;
			}
			set
			{
				if ((this._description != value))
				{
					this.OndescriptionChanging(value);
					this.SendPropertyChanging();
					this._description = value;
					this.SendPropertyChanged("description");
					this.OndescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AddedBy", DbType="NVarChar(256)")]
		public string AddedBy
		{
			get
			{
				return this._AddedBy;
			}
			set
			{
				if ((this._AddedBy != value))
				{
					this.OnAddedByChanging(value);
					this.SendPropertyChanging();
					this._AddedBy = value;
					this.SendPropertyChanged("AddedBy");
					this.OnAddedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date", DbType="DateTime NOT NULL")]
		public System.DateTime date
		{
			get
			{
				return this._date;
			}
			set
			{
				if ((this._date != value))
				{
					this.OndateChanging(value);
					this.SendPropertyChanging();
					this._date = value;
					this.SendPropertyChanged("date");
					this.OndateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_html", DbType="NVarChar(MAX)")]
		public string html
		{
			get
			{
				return this._html;
			}
			set
			{
				if ((this._html != value))
				{
					this.OnhtmlChanging(value);
					this.SendPropertyChanging();
					this._html = value;
					this.SendPropertyChanged("html");
					this.OnhtmlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_thumburl", DbType="NVarChar(256)")]
		public string thumburl
		{
			get
			{
				return this._thumburl;
			}
			set
			{
				if ((this._thumburl != value))
				{
					this.OnthumburlChanging(value);
					this.SendPropertyChanging();
					this._thumburl = value;
					this.SendPropertyChanged("thumburl");
					this.OnthumburlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_type", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string type
		{
			get
			{
				return this._type;
			}
			set
			{
				if ((this._type != value))
				{
					this.OntypeChanging(value);
					this.SendPropertyChanging();
					this._type = value;
					this.SendPropertyChanged("type");
					this.OntypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_views", DbType="Int NOT NULL")]
		public int views
		{
			get
			{
				return this._views;
			}
			set
			{
				if ((this._views != value))
				{
					this.OnviewsChanging(value);
					this.SendPropertyChanging();
					this._views = value;
					this.SendPropertyChanged("views");
					this.OnviewsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_clicks", DbType="Int NOT NULL")]
		public int clicks
		{
			get
			{
				return this._clicks;
			}
			set
			{
				if ((this._clicks != value))
				{
					this.OnclicksChanging(value);
					this.SendPropertyChanging();
					this._clicks = value;
					this.SendPropertyChanged("clicks");
					this.OnclicksChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="WebPage_tagmap", Storage="_tagmaps", ThisKey="page_id", OtherKey="page_id")]
		public EntitySet<tagmap> tagmaps
		{
			get
			{
				return this._tagmaps;
			}
			set
			{
				this._tagmaps.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="WebPage_Post", Storage="_Posts", ThisKey="page_id", OtherKey="pageid")]
		public EntitySet<Post> Posts
		{
			get
			{
				return this._Posts;
			}
			set
			{
				this._Posts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="WebPage_Comment", Storage="_Comments", ThisKey="page_id", OtherKey="page_id")]
		public EntitySet<Comment> Comments
		{
			get
			{
				return this._Comments;
			}
			set
			{
				this._Comments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="WebPage_UserPageRelation", Storage="_UserPageRelations", ThisKey="page_id", OtherKey="Page_id")]
		public EntitySet<UserPageRelation> UserPageRelations
		{
			get
			{
				return this._UserPageRelations;
			}
			set
			{
				this._UserPageRelations.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tagmaps(tagmap entity)
		{
			this.SendPropertyChanging();
			entity.WebPage = this;
		}
		
		private void detach_tagmaps(tagmap entity)
		{
			this.SendPropertyChanging();
			entity.WebPage = null;
		}
		
		private void attach_Posts(Post entity)
		{
			this.SendPropertyChanging();
			entity.WebPage = this;
		}
		
		private void detach_Posts(Post entity)
		{
			this.SendPropertyChanging();
			entity.WebPage = null;
		}
		
		private void attach_Comments(Comment entity)
		{
			this.SendPropertyChanging();
			entity.WebPage = this;
		}
		
		private void detach_Comments(Comment entity)
		{
			this.SendPropertyChanging();
			entity.WebPage = null;
		}
		
		private void attach_UserPageRelations(UserPageRelation entity)
		{
			this.SendPropertyChanging();
			entity.WebPage = this;
		}
		
		private void detach_UserPageRelations(UserPageRelation entity)
		{
			this.SendPropertyChanging();
			entity.WebPage = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.interestmap")]
	public partial class interestmap : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _tag_id;
		
		private System.Guid _userid;
		
		private int _id;
		
		private int _pageid;
		
		private System.DateTime _date;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Ontag_idChanging(int value);
    partial void Ontag_idChanged();
    partial void OnuseridChanging(System.Guid value);
    partial void OnuseridChanged();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnpageidChanging(int value);
    partial void OnpageidChanged();
    partial void OndateChanging(System.DateTime value);
    partial void OndateChanged();
    #endregion
		
		public interestmap()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tag_id", DbType="Int NOT NULL")]
		public int tag_id
		{
			get
			{
				return this._tag_id;
			}
			set
			{
				if ((this._tag_id != value))
				{
					this.Ontag_idChanging(value);
					this.SendPropertyChanging();
					this._tag_id = value;
					this.SendPropertyChanged("tag_id");
					this.Ontag_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_userid", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid userid
		{
			get
			{
				return this._userid;
			}
			set
			{
				if ((this._userid != value))
				{
					this.OnuseridChanging(value);
					this.SendPropertyChanging();
					this._userid = value;
					this.SendPropertyChanged("userid");
					this.OnuseridChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pageid", DbType="Int NOT NULL")]
		public int pageid
		{
			get
			{
				return this._pageid;
			}
			set
			{
				if ((this._pageid != value))
				{
					this.OnpageidChanging(value);
					this.SendPropertyChanging();
					this._pageid = value;
					this.SendPropertyChanged("pageid");
					this.OnpageidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date", DbType="DateTime NOT NULL")]
		public System.DateTime date
		{
			get
			{
				return this._date;
			}
			set
			{
				if ((this._date != value))
				{
					this.OndateChanging(value);
					this.SendPropertyChanging();
					this._date = value;
					this.SendPropertyChanged("date");
					this.OndateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Posts")]
	public partial class Post : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _pageid;
		
		private int _id;
		
		private System.Guid _UserId;
		
		private System.DateTime _Date;
		
		private string _Comment;
		
		private System.Nullable<int> _RepostedFrom_postid;
		
		private string _User_Name;
		
		private string _Full_Name;
		
		private EntitySet<Post> _Posts;
		
		private EntitySet<PostUserTag> _PostUserTags;
		
		private EntitySet<Comment> _Comments;
		
		private EntitySet<UserPageRelation> _UserPageRelations;
		
		private EntityRef<Post> _Post1;
		
		private EntityRef<WebPage> _WebPage;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnpageidChanging(int value);
    partial void OnpageidChanged();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnUserIdChanging(System.Guid value);
    partial void OnUserIdChanged();
    partial void OnDateChanging(System.DateTime value);
    partial void OnDateChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    partial void OnRepostedFrom_postidChanging(System.Nullable<int> value);
    partial void OnRepostedFrom_postidChanged();
    partial void OnUser_NameChanging(string value);
    partial void OnUser_NameChanged();
    partial void OnFull_NameChanging(string value);
    partial void OnFull_NameChanged();
    #endregion
		
		public Post()
		{
			this._Posts = new EntitySet<Post>(new Action<Post>(this.attach_Posts), new Action<Post>(this.detach_Posts));
			this._PostUserTags = new EntitySet<PostUserTag>(new Action<PostUserTag>(this.attach_PostUserTags), new Action<PostUserTag>(this.detach_PostUserTags));
			this._Comments = new EntitySet<Comment>(new Action<Comment>(this.attach_Comments), new Action<Comment>(this.detach_Comments));
			this._UserPageRelations = new EntitySet<UserPageRelation>(new Action<UserPageRelation>(this.attach_UserPageRelations), new Action<UserPageRelation>(this.detach_UserPageRelations));
			this._Post1 = default(EntityRef<Post>);
			this._WebPage = default(EntityRef<WebPage>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pageid", DbType="Int NOT NULL")]
		public int pageid
		{
			get
			{
				return this._pageid;
			}
			set
			{
				if ((this._pageid != value))
				{
					if (this._WebPage.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnpageidChanging(value);
					this.SendPropertyChanging();
					this._pageid = value;
					this.SendPropertyChanged("pageid");
					this.OnpageidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="DateTime NOT NULL")]
		public System.DateTime Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RepostedFrom_postid", DbType="Int")]
		public System.Nullable<int> RepostedFrom_postid
		{
			get
			{
				return this._RepostedFrom_postid;
			}
			set
			{
				if ((this._RepostedFrom_postid != value))
				{
					if (this._Post1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRepostedFrom_postidChanging(value);
					this.SendPropertyChanging();
					this._RepostedFrom_postid = value;
					this.SendPropertyChanged("RepostedFrom_postid");
					this.OnRepostedFrom_postidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_User_Name", DbType="NVarChar(256)")]
		public string User_Name
		{
			get
			{
				return this._User_Name;
			}
			set
			{
				if ((this._User_Name != value))
				{
					this.OnUser_NameChanging(value);
					this.SendPropertyChanging();
					this._User_Name = value;
					this.SendPropertyChanged("User_Name");
					this.OnUser_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Full_Name", DbType="NChar(256)")]
		public string Full_Name
		{
			get
			{
				return this._Full_Name;
			}
			set
			{
				if ((this._Full_Name != value))
				{
					this.OnFull_NameChanging(value);
					this.SendPropertyChanging();
					this._Full_Name = value;
					this.SendPropertyChanged("Full_Name");
					this.OnFull_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Post_Post", Storage="_Posts", ThisKey="id", OtherKey="RepostedFrom_postid")]
		public EntitySet<Post> Posts
		{
			get
			{
				return this._Posts;
			}
			set
			{
				this._Posts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Post_PostUserTag", Storage="_PostUserTags", ThisKey="id", OtherKey="Postid")]
		public EntitySet<PostUserTag> PostUserTags
		{
			get
			{
				return this._PostUserTags;
			}
			set
			{
				this._PostUserTags.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Post_Comment", Storage="_Comments", ThisKey="id", OtherKey="postid")]
		public EntitySet<Comment> Comments
		{
			get
			{
				return this._Comments;
			}
			set
			{
				this._Comments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Post_UserPageRelation", Storage="_UserPageRelations", ThisKey="id", OtherKey="Post_id")]
		public EntitySet<UserPageRelation> UserPageRelations
		{
			get
			{
				return this._UserPageRelations;
			}
			set
			{
				this._UserPageRelations.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Post_Post", Storage="_Post1", ThisKey="RepostedFrom_postid", OtherKey="id", IsForeignKey=true)]
		public Post Post1
		{
			get
			{
				return this._Post1.Entity;
			}
			set
			{
				Post previousValue = this._Post1.Entity;
				if (((previousValue != value) 
							|| (this._Post1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Post1.Entity = null;
						previousValue.Posts.Remove(this);
					}
					this._Post1.Entity = value;
					if ((value != null))
					{
						value.Posts.Add(this);
						this._RepostedFrom_postid = value.id;
					}
					else
					{
						this._RepostedFrom_postid = default(Nullable<int>);
					}
					this.SendPropertyChanged("Post1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="WebPage_Post", Storage="_WebPage", ThisKey="pageid", OtherKey="page_id", IsForeignKey=true)]
		public WebPage WebPage
		{
			get
			{
				return this._WebPage.Entity;
			}
			set
			{
				WebPage previousValue = this._WebPage.Entity;
				if (((previousValue != value) 
							|| (this._WebPage.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._WebPage.Entity = null;
						previousValue.Posts.Remove(this);
					}
					this._WebPage.Entity = value;
					if ((value != null))
					{
						value.Posts.Add(this);
						this._pageid = value.page_id;
					}
					else
					{
						this._pageid = default(int);
					}
					this.SendPropertyChanged("WebPage");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Posts(Post entity)
		{
			this.SendPropertyChanging();
			entity.Post1 = this;
		}
		
		private void detach_Posts(Post entity)
		{
			this.SendPropertyChanging();
			entity.Post1 = null;
		}
		
		private void attach_PostUserTags(PostUserTag entity)
		{
			this.SendPropertyChanging();
			entity.Post = this;
		}
		
		private void detach_PostUserTags(PostUserTag entity)
		{
			this.SendPropertyChanging();
			entity.Post = null;
		}
		
		private void attach_Comments(Comment entity)
		{
			this.SendPropertyChanging();
			entity.Post = this;
		}
		
		private void detach_Comments(Comment entity)
		{
			this.SendPropertyChanging();
			entity.Post = null;
		}
		
		private void attach_UserPageRelations(UserPageRelation entity)
		{
			this.SendPropertyChanging();
			entity.Post = this;
		}
		
		private void detach_UserPageRelations(UserPageRelation entity)
		{
			this.SendPropertyChanging();
			entity.Post = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.notifications")]
	public partial class notification : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private System.Guid _recipient_id;
		
		private System.Guid _sender_id;
		
		private int _activity_id;
		
		private string _object_id;
		
		private System.DateTime _time;
		
		private bool _is_read;
		
		private System.Nullable<System.DateTime> _date_read;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Onrecipient_idChanging(System.Guid value);
    partial void Onrecipient_idChanged();
    partial void Onsender_idChanging(System.Guid value);
    partial void Onsender_idChanged();
    partial void Onactivity_idChanging(int value);
    partial void Onactivity_idChanged();
    partial void Onobject_idChanging(string value);
    partial void Onobject_idChanged();
    partial void OntimeChanging(System.DateTime value);
    partial void OntimeChanged();
    partial void Onis_readChanging(bool value);
    partial void Onis_readChanged();
    partial void Ondate_readChanging(System.Nullable<System.DateTime> value);
    partial void Ondate_readChanged();
    #endregion
		
		public notification()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_recipient_id", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid recipient_id
		{
			get
			{
				return this._recipient_id;
			}
			set
			{
				if ((this._recipient_id != value))
				{
					this.Onrecipient_idChanging(value);
					this.SendPropertyChanging();
					this._recipient_id = value;
					this.SendPropertyChanged("recipient_id");
					this.Onrecipient_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sender_id", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid sender_id
		{
			get
			{
				return this._sender_id;
			}
			set
			{
				if ((this._sender_id != value))
				{
					this.Onsender_idChanging(value);
					this.SendPropertyChanging();
					this._sender_id = value;
					this.SendPropertyChanged("sender_id");
					this.Onsender_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_activity_id", DbType="Int NOT NULL")]
		public int activity_id
		{
			get
			{
				return this._activity_id;
			}
			set
			{
				if ((this._activity_id != value))
				{
					this.Onactivity_idChanging(value);
					this.SendPropertyChanging();
					this._activity_id = value;
					this.SendPropertyChanged("activity_id");
					this.Onactivity_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_object_id", DbType="NChar(50) NOT NULL", CanBeNull=false)]
		public string object_id
		{
			get
			{
				return this._object_id;
			}
			set
			{
				if ((this._object_id != value))
				{
					this.Onobject_idChanging(value);
					this.SendPropertyChanging();
					this._object_id = value;
					this.SendPropertyChanged("object_id");
					this.Onobject_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_time", DbType="DateTime NOT NULL")]
		public System.DateTime time
		{
			get
			{
				return this._time;
			}
			set
			{
				if ((this._time != value))
				{
					this.OntimeChanging(value);
					this.SendPropertyChanging();
					this._time = value;
					this.SendPropertyChanged("time");
					this.OntimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_is_read", DbType="Bit NOT NULL")]
		public bool is_read
		{
			get
			{
				return this._is_read;
			}
			set
			{
				if ((this._is_read != value))
				{
					this.Onis_readChanging(value);
					this.SendPropertyChanging();
					this._is_read = value;
					this.SendPropertyChanged("is_read");
					this.Onis_readChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date_read", DbType="DateTime")]
		public System.Nullable<System.DateTime> date_read
		{
			get
			{
				return this._date_read;
			}
			set
			{
				if ((this._date_read != value))
				{
					this.Ondate_readChanging(value);
					this.SendPropertyChanging();
					this._date_read = value;
					this.SendPropertyChanged("date_read");
					this.Ondate_readChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PostUserTags")]
	public partial class PostUserTag : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private System.Guid _Userid;
		
		private int _Postid;
		
		private System.DateTime _Date;
		
		private System.Guid _Taggedby;
		
		private EntityRef<Post> _Post;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnUseridChanging(System.Guid value);
    partial void OnUseridChanged();
    partial void OnPostidChanging(int value);
    partial void OnPostidChanged();
    partial void OnDateChanging(System.DateTime value);
    partial void OnDateChanged();
    partial void OnTaggedbyChanging(System.Guid value);
    partial void OnTaggedbyChanged();
    #endregion
		
		public PostUserTag()
		{
			this._Post = default(EntityRef<Post>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Userid", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid Userid
		{
			get
			{
				return this._Userid;
			}
			set
			{
				if ((this._Userid != value))
				{
					this.OnUseridChanging(value);
					this.SendPropertyChanging();
					this._Userid = value;
					this.SendPropertyChanged("Userid");
					this.OnUseridChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Postid", DbType="Int NOT NULL")]
		public int Postid
		{
			get
			{
				return this._Postid;
			}
			set
			{
				if ((this._Postid != value))
				{
					if (this._Post.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPostidChanging(value);
					this.SendPropertyChanging();
					this._Postid = value;
					this.SendPropertyChanged("Postid");
					this.OnPostidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="DateTime NOT NULL")]
		public System.DateTime Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Taggedby", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid Taggedby
		{
			get
			{
				return this._Taggedby;
			}
			set
			{
				if ((this._Taggedby != value))
				{
					this.OnTaggedbyChanging(value);
					this.SendPropertyChanging();
					this._Taggedby = value;
					this.SendPropertyChanged("Taggedby");
					this.OnTaggedbyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Post_PostUserTag", Storage="_Post", ThisKey="Postid", OtherKey="id", IsForeignKey=true)]
		public Post Post
		{
			get
			{
				return this._Post.Entity;
			}
			set
			{
				Post previousValue = this._Post.Entity;
				if (((previousValue != value) 
							|| (this._Post.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Post.Entity = null;
						previousValue.PostUserTags.Remove(this);
					}
					this._Post.Entity = value;
					if ((value != null))
					{
						value.PostUserTags.Add(this);
						this._Postid = value.id;
					}
					else
					{
						this._Postid = default(int);
					}
					this.SendPropertyChanged("Post");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Comments")]
	public partial class Comment : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _page_id;
		
		private int _id;
		
		private string _text;
		
		private System.Guid _userid;
		
		private System.DateTime _date;
		
		private string _Name;
		
		private string _Full_Name;
		
		private System.Nullable<int> _postid;
		
		private EntitySet<CommentRating> _CommentRatings;
		
		private EntityRef<Post> _Post;
		
		private EntityRef<WebPage> _WebPage;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onpage_idChanging(int value);
    partial void Onpage_idChanged();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OntextChanging(string value);
    partial void OntextChanged();
    partial void OnuseridChanging(System.Guid value);
    partial void OnuseridChanged();
    partial void OndateChanging(System.DateTime value);
    partial void OndateChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnFull_NameChanging(string value);
    partial void OnFull_NameChanged();
    partial void OnpostidChanging(System.Nullable<int> value);
    partial void OnpostidChanged();
    #endregion
		
		public Comment()
		{
			this._CommentRatings = new EntitySet<CommentRating>(new Action<CommentRating>(this.attach_CommentRatings), new Action<CommentRating>(this.detach_CommentRatings));
			this._Post = default(EntityRef<Post>);
			this._WebPage = default(EntityRef<WebPage>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_page_id", DbType="Int NOT NULL")]
		public int page_id
		{
			get
			{
				return this._page_id;
			}
			set
			{
				if ((this._page_id != value))
				{
					if (this._WebPage.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onpage_idChanging(value);
					this.SendPropertyChanging();
					this._page_id = value;
					this.SendPropertyChanged("page_id");
					this.Onpage_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_text", DbType="NText NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string text
		{
			get
			{
				return this._text;
			}
			set
			{
				if ((this._text != value))
				{
					this.OntextChanging(value);
					this.SendPropertyChanging();
					this._text = value;
					this.SendPropertyChanged("text");
					this.OntextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_userid", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid userid
		{
			get
			{
				return this._userid;
			}
			set
			{
				if ((this._userid != value))
				{
					this.OnuseridChanging(value);
					this.SendPropertyChanging();
					this._userid = value;
					this.SendPropertyChanged("userid");
					this.OnuseridChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date", DbType="DateTime NOT NULL")]
		public System.DateTime date
		{
			get
			{
				return this._date;
			}
			set
			{
				if ((this._date != value))
				{
					this.OndateChanging(value);
					this.SendPropertyChanging();
					this._date = value;
					this.SendPropertyChanged("date");
					this.OndateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Full_Name", DbType="NVarChar(256)")]
		public string Full_Name
		{
			get
			{
				return this._Full_Name;
			}
			set
			{
				if ((this._Full_Name != value))
				{
					this.OnFull_NameChanging(value);
					this.SendPropertyChanging();
					this._Full_Name = value;
					this.SendPropertyChanged("Full_Name");
					this.OnFull_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_postid", DbType="Int")]
		public System.Nullable<int> postid
		{
			get
			{
				return this._postid;
			}
			set
			{
				if ((this._postid != value))
				{
					if (this._Post.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnpostidChanging(value);
					this.SendPropertyChanging();
					this._postid = value;
					this.SendPropertyChanged("postid");
					this.OnpostidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Comment_CommentRating", Storage="_CommentRatings", ThisKey="id", OtherKey="comment_id")]
		public EntitySet<CommentRating> CommentRatings
		{
			get
			{
				return this._CommentRatings;
			}
			set
			{
				this._CommentRatings.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Post_Comment", Storage="_Post", ThisKey="postid", OtherKey="id", IsForeignKey=true)]
		public Post Post
		{
			get
			{
				return this._Post.Entity;
			}
			set
			{
				Post previousValue = this._Post.Entity;
				if (((previousValue != value) 
							|| (this._Post.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Post.Entity = null;
						previousValue.Comments.Remove(this);
					}
					this._Post.Entity = value;
					if ((value != null))
					{
						value.Comments.Add(this);
						this._postid = value.id;
					}
					else
					{
						this._postid = default(Nullable<int>);
					}
					this.SendPropertyChanged("Post");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="WebPage_Comment", Storage="_WebPage", ThisKey="page_id", OtherKey="page_id", IsForeignKey=true)]
		public WebPage WebPage
		{
			get
			{
				return this._WebPage.Entity;
			}
			set
			{
				WebPage previousValue = this._WebPage.Entity;
				if (((previousValue != value) 
							|| (this._WebPage.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._WebPage.Entity = null;
						previousValue.Comments.Remove(this);
					}
					this._WebPage.Entity = value;
					if ((value != null))
					{
						value.Comments.Add(this);
						this._page_id = value.page_id;
					}
					else
					{
						this._page_id = default(int);
					}
					this.SendPropertyChanged("WebPage");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CommentRatings(CommentRating entity)
		{
			this.SendPropertyChanging();
			entity.Comment = this;
		}
		
		private void detach_CommentRatings(CommentRating entity)
		{
			this.SendPropertyChanging();
			entity.Comment = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UserPageRelation")]
	public partial class UserPageRelation : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _UserId;
		
		private int _Page_id;
		
		private int _id;
		
		private short _Rate;
		
		private int _Post_id;
		
		private System.DateTime _Date;
		
		private EntityRef<Post> _Post;
		
		private EntityRef<WebPage> _WebPage;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserIdChanging(System.Guid value);
    partial void OnUserIdChanged();
    partial void OnPage_idChanging(int value);
    partial void OnPage_idChanged();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnRateChanging(short value);
    partial void OnRateChanged();
    partial void OnPost_idChanging(int value);
    partial void OnPost_idChanged();
    partial void OnDateChanging(System.DateTime value);
    partial void OnDateChanged();
    #endregion
		
		public UserPageRelation()
		{
			this._Post = default(EntityRef<Post>);
			this._WebPage = default(EntityRef<WebPage>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Page_id", DbType="Int NOT NULL")]
		public int Page_id
		{
			get
			{
				return this._Page_id;
			}
			set
			{
				if ((this._Page_id != value))
				{
					if (this._WebPage.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPage_idChanging(value);
					this.SendPropertyChanging();
					this._Page_id = value;
					this.SendPropertyChanged("Page_id");
					this.OnPage_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Rate", DbType="SmallInt NOT NULL")]
		public short Rate
		{
			get
			{
				return this._Rate;
			}
			set
			{
				if ((this._Rate != value))
				{
					this.OnRateChanging(value);
					this.SendPropertyChanging();
					this._Rate = value;
					this.SendPropertyChanged("Rate");
					this.OnRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Post_id", DbType="Int NOT NULL")]
		public int Post_id
		{
			get
			{
				return this._Post_id;
			}
			set
			{
				if ((this._Post_id != value))
				{
					if (this._Post.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPost_idChanging(value);
					this.SendPropertyChanging();
					this._Post_id = value;
					this.SendPropertyChanged("Post_id");
					this.OnPost_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="DateTime NOT NULL")]
		public System.DateTime Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Post_UserPageRelation", Storage="_Post", ThisKey="Post_id", OtherKey="id", IsForeignKey=true)]
		public Post Post
		{
			get
			{
				return this._Post.Entity;
			}
			set
			{
				Post previousValue = this._Post.Entity;
				if (((previousValue != value) 
							|| (this._Post.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Post.Entity = null;
						previousValue.UserPageRelations.Remove(this);
					}
					this._Post.Entity = value;
					if ((value != null))
					{
						value.UserPageRelations.Add(this);
						this._Post_id = value.id;
					}
					else
					{
						this._Post_id = default(int);
					}
					this.SendPropertyChanged("Post");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="WebPage_UserPageRelation", Storage="_WebPage", ThisKey="Page_id", OtherKey="page_id", IsForeignKey=true)]
		public WebPage WebPage
		{
			get
			{
				return this._WebPage.Entity;
			}
			set
			{
				WebPage previousValue = this._WebPage.Entity;
				if (((previousValue != value) 
							|| (this._WebPage.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._WebPage.Entity = null;
						previousValue.UserPageRelations.Remove(this);
					}
					this._WebPage.Entity = value;
					if ((value != null))
					{
						value.UserPageRelations.Add(this);
						this._Page_id = value.page_id;
					}
					else
					{
						this._Page_id = default(int);
					}
					this.SendPropertyChanged("WebPage");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UserData")]
	public partial class UserData : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private System.Guid _UserId;
		
		private string _FBtoken;
		
		private string _FBid;
		
		private bool _FBautopost;
		
		private bool _EmailFollows;
		
		private bool _EmailReposts;
		
		private bool _EmailLikes;
		
		private bool _EmailCommentsReply;
		
		private bool _EmailComments;
		
		private bool _EmailCommentsLike;
		
		private bool _EmailUserPostTag;
		
		private string _FullName;
		
		private string _UserName;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnUserIdChanging(System.Guid value);
    partial void OnUserIdChanged();
    partial void OnFBtokenChanging(string value);
    partial void OnFBtokenChanged();
    partial void OnFBidChanging(string value);
    partial void OnFBidChanged();
    partial void OnFBautopostChanging(bool value);
    partial void OnFBautopostChanged();
    partial void OnEmailFollowsChanging(bool value);
    partial void OnEmailFollowsChanged();
    partial void OnEmailRepostsChanging(bool value);
    partial void OnEmailRepostsChanged();
    partial void OnEmailLikesChanging(bool value);
    partial void OnEmailLikesChanged();
    partial void OnEmailCommentsReplyChanging(bool value);
    partial void OnEmailCommentsReplyChanged();
    partial void OnEmailCommentsChanging(bool value);
    partial void OnEmailCommentsChanged();
    partial void OnEmailCommentsLikeChanging(bool value);
    partial void OnEmailCommentsLikeChanged();
    partial void OnEmailUserPostTagChanging(bool value);
    partial void OnEmailUserPostTagChanged();
    partial void OnFullNameChanging(string value);
    partial void OnFullNameChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    #endregion
		
		public UserData()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FBtoken", DbType="NVarChar(255)")]
		public string FBtoken
		{
			get
			{
				return this._FBtoken;
			}
			set
			{
				if ((this._FBtoken != value))
				{
					this.OnFBtokenChanging(value);
					this.SendPropertyChanging();
					this._FBtoken = value;
					this.SendPropertyChanged("FBtoken");
					this.OnFBtokenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FBid", DbType="VarChar(80)")]
		public string FBid
		{
			get
			{
				return this._FBid;
			}
			set
			{
				if ((this._FBid != value))
				{
					this.OnFBidChanging(value);
					this.SendPropertyChanging();
					this._FBid = value;
					this.SendPropertyChanged("FBid");
					this.OnFBidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FBautopost", DbType="Bit NOT NULL")]
		public bool FBautopost
		{
			get
			{
				return this._FBautopost;
			}
			set
			{
				if ((this._FBautopost != value))
				{
					this.OnFBautopostChanging(value);
					this.SendPropertyChanging();
					this._FBautopost = value;
					this.SendPropertyChanged("FBautopost");
					this.OnFBautopostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmailFollows", DbType="Bit NOT NULL")]
		public bool EmailFollows
		{
			get
			{
				return this._EmailFollows;
			}
			set
			{
				if ((this._EmailFollows != value))
				{
					this.OnEmailFollowsChanging(value);
					this.SendPropertyChanging();
					this._EmailFollows = value;
					this.SendPropertyChanged("EmailFollows");
					this.OnEmailFollowsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmailReposts", DbType="Bit NOT NULL")]
		public bool EmailReposts
		{
			get
			{
				return this._EmailReposts;
			}
			set
			{
				if ((this._EmailReposts != value))
				{
					this.OnEmailRepostsChanging(value);
					this.SendPropertyChanging();
					this._EmailReposts = value;
					this.SendPropertyChanged("EmailReposts");
					this.OnEmailRepostsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmailLikes", DbType="Bit NOT NULL")]
		public bool EmailLikes
		{
			get
			{
				return this._EmailLikes;
			}
			set
			{
				if ((this._EmailLikes != value))
				{
					this.OnEmailLikesChanging(value);
					this.SendPropertyChanging();
					this._EmailLikes = value;
					this.SendPropertyChanged("EmailLikes");
					this.OnEmailLikesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmailCommentsReply", DbType="Bit NOT NULL")]
		public bool EmailCommentsReply
		{
			get
			{
				return this._EmailCommentsReply;
			}
			set
			{
				if ((this._EmailCommentsReply != value))
				{
					this.OnEmailCommentsReplyChanging(value);
					this.SendPropertyChanging();
					this._EmailCommentsReply = value;
					this.SendPropertyChanged("EmailCommentsReply");
					this.OnEmailCommentsReplyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmailComments", DbType="Bit NOT NULL")]
		public bool EmailComments
		{
			get
			{
				return this._EmailComments;
			}
			set
			{
				if ((this._EmailComments != value))
				{
					this.OnEmailCommentsChanging(value);
					this.SendPropertyChanging();
					this._EmailComments = value;
					this.SendPropertyChanged("EmailComments");
					this.OnEmailCommentsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmailCommentsLike", DbType="Bit NOT NULL")]
		public bool EmailCommentsLike
		{
			get
			{
				return this._EmailCommentsLike;
			}
			set
			{
				if ((this._EmailCommentsLike != value))
				{
					this.OnEmailCommentsLikeChanging(value);
					this.SendPropertyChanging();
					this._EmailCommentsLike = value;
					this.SendPropertyChanged("EmailCommentsLike");
					this.OnEmailCommentsLikeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmailUserPostTag", DbType="Bit NOT NULL")]
		public bool EmailUserPostTag
		{
			get
			{
				return this._EmailUserPostTag;
			}
			set
			{
				if ((this._EmailUserPostTag != value))
				{
					this.OnEmailUserPostTagChanging(value);
					this.SendPropertyChanging();
					this._EmailUserPostTag = value;
					this.SendPropertyChanged("EmailUserPostTag");
					this.OnEmailUserPostTagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FullName", DbType="NVarChar(120) NOT NULL", CanBeNull=false)]
		public string FullName
		{
			get
			{
				return this._FullName;
			}
			set
			{
				if ((this._FullName != value))
				{
					this.OnFullNameChanging(value);
					this.SendPropertyChanging();
					this._FullName = value;
					this.SendPropertyChanged("FullName");
					this.OnFullNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="NVarChar(120) NOT NULL", CanBeNull=false)]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
